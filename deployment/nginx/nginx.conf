events {
    worker_connections 1024;
}

http {
    upstream nodejs_upstream {
        server nodejs:8000;
    }

    upstream ws_upstream {
        server nodejs:3002;
    }

    server {
        listen 80;
        #server_name firefighter.today localhost:3000;
        server_name _; 
 
	    access_log /dev/stdout;
	    error_log /dev/stderr;
    location /socket.io/ {
	proxy_pass http://ws_upstream;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
    }

    location /socket.io/socket.io.js {
	proxy_pass http://ws_upstream;
    }


        location / {
            proxy_pass http://nodejs_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

		server {
	    listen 443 ssl;
	    ssl_certificate /etc/ssl/certificate.crt; 
	    ssl_certificate_key /etc/ssl/private.key;
	    server_name gcp.firefighter.today;
	    access_log /dev/stdout;
	    error_log /dev/stderr;

location /socket.io/ {
	proxy_pass http://ws_upstream;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
    }

    location /socket.io/socket.io.js {
	proxy_pass http://ws_upstream;
    }


	    
	    location / {
	        proxy_pass http://nodejs_upstream;
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection 'upgrade';
	        proxy_set_header Host $host;
	        proxy_set_header X-Real-IP $remote_addr;  # 실제 IP 주소를 전달
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 실제 IP 주소를 전달
	        proxy_set_header X-Forwarded-Proto $scheme;  # 실제 요청 스키마를 전달
	    }
	}

}
